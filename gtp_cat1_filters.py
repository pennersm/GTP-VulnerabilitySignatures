#! /usr/bin/python3
import pdb
import ipaddress as ip
import json
import requests as rq
from requests.auth import HTTPBasicAuth
#==========================================================================-
# since we dnt know if we have proper certs use verify=false for this Connection
#urllib3.disable_warnings()
rq.packages.urllib3.disable_warnings()
#===========================================================================
api_uri="https://192.168.1.6/restapi/v10.1/"
api_key='LUFRPT1rdDgzdXlrQlk1V29GNmpRRng1SWZTRFl2OVk9d21GVk5KK1BrRFlTOVEveTZTVzlWS01Cejd0N05DbWdOcHJGelZML3R4WVcwQkFnd05LQ2orcmpMV1Q5N3FLUQ=='
# NOTE: see below location/cgi-strings for simple VM ; adapt it if youre  working on PA-appliance or multiple vsys
#--------------------------------------------------------------------------
# Get API key:
# curl -s -k -X GET 'https://192.168.1.6/api/?type=keygen&user=admin&password='|sed 's%.*<key>\(.*\)</key>.*%\1%p'
#
#--------------------------------------------------------------------------
# see here: https://docs.paloaltonetworks.com/pan-os/9-1/pan-os-panorama-api/get-started-with-the-pan-os-xml-api/authenticate-your-api-requests
headers = {
    'Content-type': 'application/json',
    'x-pan-key': api_key,
    'Authorization': 'Basic YWRtaW46ITc4OVJldm9sdXRpb24K'
}
#===========================================================================
profile_name="GTP-C-MsgType-Filters"
#===========================================================================
# check if/what profile(s) exist
query_string=api_uri+"Objects/VulnerabilityProtectionSecurityProfiles?@location=vsys&vsys=vsys1"
vuln_profs = rq.get( query_string, headers = headers,verify=False )
if vuln_profs.status_code != 200:
    print("Problem when reading existing Vulnerability Profiles from NGFW")
    pdb.set_trace(header="last request status not 200 !")

num_profiles = (int(vuln_profs.json()["result"]["@total-count"])-1)
if num_profiles > 0:
    for i in range (0, num_profiles):
        if vuln_profs.json()["result"]["entry"][1]["@name"] == profile_name :
            print ("Custom Vulnerability Profile with name \'"+profile_name+"\' already exists on "+api_uri)
            print(quit);

###########################################################################################################
profile_body = {
  "entry": {
    "@name": profile_name,
    "description": "Custom Signatures 41100 - 41299 are added to existing \"strict\" profile",
    "rules": { "entry": [ {
        "@name": "all-pan-signatures-strict",
        "threat-name": "any",
        "cve": { "member": [ "any" ]},
        "host": "any",
        "vendor-id":{ "member": [ "any" ]},
        "severity": { "member": [ "any" ]},
        "category": "any",
        "action": { "default": {} },
        "packet-capture": "disable"
    }]},
    "threat-exception": { "entry": [ ]}
}}
should=0 ; ok=0
###########################################################################################################
threatid="41101" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv1-C Message Type for Charging Data Record transfer management",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Types 4-7 are GTP-\' (GTP-prime) type for charging TS 32.205",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "gtp-prime",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_gt_3",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_3_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 3
                        }}
                    }]
                }
                },{
                "@name": "v1_lt_8",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_lt_8_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 8
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
threatid="41102" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified GTPv1-C Message Type 8-15 for future use",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Types 8-15 are reserved for future use TS 29.060",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "FutUse-8-15",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_gt_7",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_7_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 7
                        }}
                    }]
                }
                },{
                "@name": "v1_lt_16",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_lt_16_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 16
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
threatid="41103" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified GTPv1-C Message Type reserved for future Tunnel Management",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Types 24-25 are reserved for future use TS 29.060",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "FutureUse-24-25",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_gt_23",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_23_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 23
                        }}
                    }]
                }
                },{
                "@name": "v1_lt_26",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_lt_26_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 26
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
threatid="41104" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv1-C Message Type for Location Management on interconnect",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Types 32-37 are reserved for GPRS/3G Location Management (GSMA FS.20 CAT 1)",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "3GLocMgmt",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_gt_31",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_31_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 31
                        }}
                    }]
                }
                },{
                "@name": "v1_lt_38",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_lt_38_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 38
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
threatid="41105" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified GTPv1-C Message Type reserved for future Location Management",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Types 38-47 are reserved for future use TS 29.060",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "FutureUse-37-48",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_gt_37",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_37_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 37
                        }}
                    }]
                }
                },{
                "@name": "v1_lt_48",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_lt_48_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 48
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
threatid="41106" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv1-C Message Type for Mobility Management on interconnect",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Types 48-62 are reserved for GPRS/3G Mobility Management (GSMA FS.20 CAT 1)",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "FutureUse-48-62",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_gt_47",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_47_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 47
                        }}
                    }]
                }
                },{
                "@name": "v1_lt_63",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_lt_63_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 63
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
threatid="41107" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified GTPv1-C Message Type reserved for future Mobility Management",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Types 63-69 are reserved for future use TS 29.060",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "FutureUse-63-69",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_gt_62",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_62_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 62
                        }}
                    }]
                }
                },{
                "@name": "v1_lt_70",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_lt_70_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 70
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
threatid="41108" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv1-C Message Type for RIM on interconnect",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Type 70 is reserved for RAN Information Relay (GSMA FS.20 CAT 1)",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "RIM",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_eq_70",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_eq_70_operator",
                        "operator": {
                            "equal-to": {
                            "context": "gtpv1-req-message-type",
                            "value": 70
                        }}
                    }]
              }}]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
threatid="41109" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified GTPv1-C Message Type 71-95 for future use",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Types 71-95 are reserved for future use TS 29.060",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "FutureUse-71-95",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_gt_70",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_70_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 70
                        }}
                    }]
                }
                },{
                "@name": "v1_lt_96",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_lt_96_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 96
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
threatid="41110" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv1-C Message Type for MBMS context and notification",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Types 96-105 are reserved for MBMS messaging TS 23.246",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "MBMS low range",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_gt_95",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_95_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 95
                        }}
                    }]
                }
                },{
                "@name": "v1_lt_106",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_lt_106_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 106
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
threatid="41111" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified GTPv1-C Message Type 106-111 for future use",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Types 106-111 are reserved for future use TS 29.060",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "FutureUse-106-111",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_gt_106",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_106_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 106
                        }}
                    }]
                }
                },{
                "@name": "v1_lt_111",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_lt_111_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 111
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
threatid="41112" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv1-C Message Type for MBMS session management",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Types 112-121 are reserved for MBMS messaging TS 23.246",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "MBMS high range",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_gt111",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_111_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 111
                        }}
                    }]
                }
                },{
                "@name": "v1_lt_122",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_lt_122_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 122
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
threatid="41113" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified GTPv1-C Message Type 122-127 for future use",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Types 122-127 are reserved for future use TS 29.060",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "FutureUse-122-127",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_gt_121",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_121_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 121
                        }}
                    }]
                }
                },{
                "@name": "v1_lt_128",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_lt_128_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 128
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
threatid="41114" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv1-C Message Type 128-129 for MS Info Change Reporting",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Types 128-129 are for MS info Change Notification TS 29.060",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "MSIC",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_gt_121",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_121_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 121
                        }}
                    }]
                }
                },{
                "@name": "v1_lt_128",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_lt_128_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 128
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
threatid="41115" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified GTPv1-C Message Type 130-239 for future use",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Types 130-239 are reserved for future use TS 29.060",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "Futuse-130-239",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_gt_129",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_129_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 129
                        }}
                    }]
                }
                },{
                "@name": "v1_lt_240",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_lt_240_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 240
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
threatid="41116" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv1-C Message Type for Charging Data Record transfer",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Types 240-241 are GTP-\' (GTP-prime) type for charging TS 32.205",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "gtp-prime",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_gt_239",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_239_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 239
                        }}
                    }]
                }
                },{
                "@name": "v1_lt_242",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_lt_242_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 242
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
threatid="41117" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified GTPv1-C Message Type 242-253 for future use",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv1-C Message Types 242-253 are reserved for future use TS 29.060",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "FutureUse-130-239",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v1_gt_129",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_129_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 129
                        }}
                    }]
                }
                },{
                "@name": "v1_lt_240",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_lt_240_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv1-req-message-type",
                            "value": 240
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
#--------------------------------------------------------------------------
threatid="41201" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv2-C Message Type for S101",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 4-16 are reserved for S101 interface CDMA2000 HRPD interworking TS 29.276",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "S101-MSGtype",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_3",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_3_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 3
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_17",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_17_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 17
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41202" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv2-C Message Type for S121",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 17-24 are reserved for S121 interface CDMA2000 HRPD interworking TS 29.276",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "S121-MSGtype",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_16",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_16_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 16
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_25",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_25_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 25
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41203" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv2-C Message Type for Sv",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 25-31 are reserved for Sv interface MME MSS interworking TS 29.280",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "Sv-MSGtype",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_24",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_24_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 24
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_32",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_32_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 32
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41204" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv2-C Message Type for Remote UE Reporting",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 40-41 are used for Remote UE Reporting feature (GSMA FS.20 CAT 1)",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "RUER-MSGtype",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_39",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_39_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 39
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_42",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_42_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 42
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41205" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified GTPv2-C Message Type from reserved ranges",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 42-63  are reserved for future S4/S11/S5/S8 communication TS 29.274",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "RUER-MSGtype",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_39",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_39_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 39
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_42",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_42_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 42
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41206" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv2-C Message Type for DL Data Failure",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Type 70 is used for DL Data Notification Failure Indication (GSMA FS.20 CAT 1)",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "DLDNFI",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [{
                "@name": "v2_eq_70",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_eq_70_operator",
                        "operator": {
                            "equal-to": {
                            "context": "gtpv2-req-message-type",
                            "value": 70
                        }}
                    }]}
            }]}
      }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41207" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv2-C Message Type for Trace Session handling",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 71-72 are used for Trace Session handling",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "trace-MSGtype",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_70",
                "or-condition": {
                    "entry": [ {
                        "@name": "v1_gt_70_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 70
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_73",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_73_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 73
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41208" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv2-C Message Type Stop Paging Indication",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Type 73 is used to indicate Stop of Paging (GSMA FS.20 CAT 1)",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "SPI",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [{
                "@name": "v2_eq_73",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_eq_73_operator",
                        "operator": {
                            "equal-to": {
                            "context": "gtpv2-req-message-type",
                            "value": 73
                        }}
                    }]}
            }]}
      }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41209" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified GTPv2-C Message Type from reserved range of unresponsed MSG",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 74-94 are reserved for future unresponded MSG TS 29.274",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "FutureUse-noresp",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_73",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_73_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 73
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_95",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_95_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 95
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41210" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv2-C Message Type for PGW DL Triggering",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 103-104 are used for PGW DL Triggering (GSMA FS.20 CAT 1)",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "PGWDLTR-MSGtype",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_102",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_102_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 102
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_105",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_105_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 105
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41211" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified GTPv2-C Message Type from reserved range S5 S4 S11",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 105-127 are reserved for future S5/S4/S11 communication TS 29.274",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "FutureUse-S5S4S11",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_104",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_104_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 104
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_128",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_128_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 128
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41212" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv2-C Message Type on interconnect",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 128-159 are reserved for S3/S10/S16 communication (GSMA FS.20 CAT 1)",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "non-S8-MSGtype",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_127",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_127_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 127
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_160",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_160_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 160
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41213" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv2-C Message Type for HO",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 160,161,166-171 are reserved for S4/S11 HO communication (GSMA FS.20 CAT 1)",
    "severity": "medium",
    "direction": "both",
    "default-action": { "drop": {} },
    "signature": { "standard": {
        "entry": [ {
            "@name": "s4s11",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition":
                { "entry": [{
                "@name": "v2_eq_various",
                "or-condition": {  "entry": [ {
                    "@name": "v2_eq_160_operator",
                    "operator": {
                        "equal-to": {
                        "context": "gtpv2-req-message-type",
                        "value": 160
                    }}
                },{
                    "@name": "v2_eq_161_operator",
                    "operator": {
                        "equal-to": {
                        "context": "gtpv2-req-message-type",
                        "value": 161
                    }}
                },{
                    "@name": "v2_eq_166_operator",
                    "operator": {
                        "equal-to": {
                        "context": "gtpv2-req-message-type",
                        "value": 166
                    }}
                },{
                    "@name": "v2_eq_167_operator",
                    "operator": {
                        "equal-to": {
                        "context": "gtpv2-req-message-type",
                        "value": 167
                    }}
                },{
                    "@name": "v2_eq_168_operator",
                    "operator": {
                        "equal-to": {
                        "context": "gtpv2-req-message-type",
                        "value": 168
                    }}
                },{
                    "@name": "v2_eq_169_operator",
                    "operator": {
                        "equal-to": {
                        "context": "gtpv2-req-message-type",
                        "value": 169
                    }}
                },{
                    "@name": "v2_eq_170_operator",
                    "operator": {
                        "equal-to": {
                        "context": "gtpv2-req-message-type",
                        "value": 170
                    }}
                },{
                    "@name": "v2_eq_171_operator",
                    "operator": {
                        "equal-to": {
                        "context": "gtpv2-req-message-type",
                        "value": 171
                    }}
                }
              ]}
      }]}}]
    }}}
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41214" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv2-C Message Type for CSFB SRVCC",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 162-165 are used for voice-call continuity Signaling",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "SRVCCCSFB",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_161",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_161_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 161
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_166",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_166_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 166
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41215" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified MSG Type from reserved range S4 S11",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 172-175,178 are reserved for future S4/S11 communication TS 29.274",
    "severity": "medium",
    "direction": "both",
    "default-action": { "drop": {} },
    "signature": { "standard": {
        "entry": [ {
            "@name": "FutureUse-S4S11",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition":
                { "entry": [{
                "@name": "v2_eq_ho",
                "or-condition": {  "entry": [ {
                    "@name": "v2_eq_172_operator",
                    "operator": {
                        "equal-to": {
                        "context": "gtpv2-req-message-type",
                        "value": 172
                    }}
                },{
                    "@name": "v2_eq_173_operator",
                    "operator": {
                        "equal-to": {
                        "context": "gtpv2-req-message-type",
                        "value": 173
                    }}
                },{
                    "@name": "v2_eq_174_operator",
                    "operator": {
                        "equal-to": {
                        "context": "gtpv2-req-message-type",
                        "value": 174
                    }}
                },{
                    "@name": "v2_eq_175_operator",
                    "operator": {
                        "equal-to": {
                        "context": "gtpv2-req-message-type",
                        "value": 175
                    }}
                },{
                    "@name": "v2_eq_178_operator",
                    "operator": {
                        "equal-to": {
                        "context": "gtpv2-req-message-type",
                        "value": 178
                    }}
                }
              ]}
      }]}}]
    }}}
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41216" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv2-C Message Type for DL Data Notification Messaging on interconnect",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 176,177 indicate NW initiated connection for outbound roamer (GSMA FS.20 CAT 1)",
    "severity": "medium",
    "direction": "both",
    "default-action": { "drop": {} },
    "signature": { "standard": {
        "entry": [ {
            "@name": "DLDN",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_175",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_175_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 175
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_178",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_178_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 178
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41217" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv2-C Message Type for PGW Restart Notification Messaging on interconnect",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 179,180 indicate PGW restart messaging accross interconnect (GSMA FS.20 CAT 1)",
    "severity": "medium",
    "direction": "both",
    "default-action": { "drop": {} },
    "signature": { "standard": {
        "entry": [ {
            "@name": "PGWreset",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_178",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_178_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 178
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_181",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_181_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 181
                        }}
                   }]
                }
            }]}
    }]}}
 }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41218" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified GTPv2-C Message Type from reserved range S4",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 181-199 are reserved for future S4 communication TS 29.274",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "FutureUse-S4",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_180",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_180_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 180
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_200",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_200_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 200
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41219" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified GTPv2-C Message Type from reserved range S5 S8",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 202-210 are reserved for future S5/S8 communication TS 29.274",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "FutureUse-S5S8",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_201",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_201_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 201
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_211",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_211_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 211
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41220" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv2-C Message Type for RAB",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 211-212 are reserved for Access Bearer Signaling (GSMA FS.20 CAT 1)",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "RAB",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_210",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_210_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 210
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_213",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_213_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 213
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41221" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified GTPv2-C Message Type from reserved range S11",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 213-230 are reserved for future S11 communication TS 29.274",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "XXX",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_212",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_212_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 212
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_231",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_231_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 231
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41222" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv2-C Message Type for MBMS",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 231-239 are reserved for Sm/Sn MBMS communication TS 23.246",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "SmSn-MSGtype",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [ {
                "@name": "v2_gt_230",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_230_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 230
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_240",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_240_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 240
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41223" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unexpected GTPv2-C Message Type for Sv",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 240-247 are reserved for Sv communication TS 29.280",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "Sv-MSGType",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_239",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_239_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 239
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_248",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_248_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 248
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
#--------------------------------------------------------------------------
threatid="41224" ; should=should+1
query_string=api_uri+"Objects/CustomVulnerabilitySignatures?location=vsys&vsys=vsys1&name="+threatid
body = {
  "entry": {
    "@name": threatid,
    "threatname": "unspecified GTPv2-C Message Type from reserved general range",
    "affected-host": {
      "client": "yes",
      "server": "yes"
    },
    "comment": "GTPv2-C Message Types 248-255 are reserved for general use TS 29.274",
    "severity": "medium",
    "direction": "both",
    "default-action": {
      "drop": {}
    },
    "signature": { "standard": {
        "entry": [ {
            "@name": "FutureUse-general",
            "scope": "protocol-data-unit",
            "order-free": "no",
            "and-condition": { "entry": [
                {
                "@name": "v2_gt_247",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_gt_247_operator",
                        "operator": {
                            "greater-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 247
                        }}
                    }]
                }
                },{
                "@name": "v2_lt_256",
                "or-condition": {
                    "entry": [ {
                        "@name": "v2_lt_256_operator",
                        "operator": {
                            "less-than": {
                            "context": "gtpv2-req-message-type",
                            "value": 256
                        }}
                   }]
                }
            }]}
    }]}}
  }
}
new_vsig = rq.post( query_string,headers = headers,verify=False,data=json.dumps(body) )
print (new_vsig.text)
if new_vsig.status_code != 200:
    print("Problem when creating Signature "+threatid)
    pdb.set_trace(header="last request status not 200 !")
else:
    profile_body["entry"]["threat-exception"]["entry"].append({"@name":threatid})
    ok=ok+1
###########################################################################################################
# create the new profile with exceptions for above enabled
query_string=api_uri+"Objects/VulnerabilityProtectionSecurityProfiles?@location=vsys&vsys=vsys1&name=GTP-C-MsgType-Filters"

prof_created = rq.post(query_string, headers = headers,verify=False, data=json.dumps(profile_body) )
if prof_created.status_code != 200:
    print (" [ERROR] Custom Vulnerability Profile with name \'"+profile_name+"\' could not be created")
    print(quit); quit()
else:
    print ("Check FW GUI : ")
    print ("Custom Vulnerability Profile \'"+profile_name+"\' created")
    print (str(should)+" Signatures defined and "+str(ok)+" exceptions set in profile")
    if (should-ok) != 0 :
        print ("Probably "+str(should-ok)+" exceptions could not be added in the profile")
